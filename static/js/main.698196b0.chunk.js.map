{"version":3,"sources":["components/post-add-form/index.js","components/post-add-form/post-add-form.js","components/post-list-item/post-list-item.js","components/post-list-filter/index.js","components/post-list-filter/post-list-filter.js","components/post-list/index.js","components/post-list/post-list.js","components/app/index.js","components/app/app.js","index.js"],"names":["PostAddForm","props","state","text","onValueChange","e","setState","target","value","postInfo","keyCode","onAdd","type","placeholder","className","this","onKeyDown","onChange","Component","PostListItem","x","newLabel","label","onTransformLabel","addingClass","classList","contains","add","removingClass","document","querySelectorAll","forEach","item","remove","onLabelChange","onDeleteItem","onCompleted","checkedLabel","onDoubleClick","id","onClick","checked","htmlFor","aria-hidden","PostListFilter","buttons","name","number","filterSelect","filter","map","clas","key","PostList","posts","elements","itemProps","App","data","onAddItem","body","newItem","active","completed","nextId","index","findIndex","elem","before","slice","after","filterPost","items","old","allPosts","length","visiblePosts","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.698196b0.chunk.js","sourcesContent":["import PostAddForm from './post-add-form';\r\nexport default PostAddForm;\r\n","import React, {Component} from 'react';\r\n\r\nimport './post-add-form.css';\r\n\r\nexport default class PostAddForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n        this.onValueChange = (e) => {\r\n            this.setState({\r\n                text: e.target.value\r\n            })\r\n        };\r\n        this.postInfo = (e) => {\r\n\r\n            if (e.keyCode === 13) {\r\n\t\t\t\tthis.props.onAdd(this.state.text);\r\n                this.setState({\r\n                    text: ''\r\n                }) \r\n\t\t\t} \r\n        } \r\n    }\r\n    \r\n\r\n    render () {\r\n        return (\r\n            <>\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Post something\"\r\n                    className=\"form-control post-form pos\"\r\n                    value={this.state.text}\r\n                    onKeyDown={this.postInfo}\r\n                    onChange={this.onValueChange}\r\n                />\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\n\r\nimport './post-list-item.css';\r\n\r\nexport default class PostListItem extends Component{\r\n    state = {\r\n        x: false,\r\n        newLabel: this.props.label\r\n    }\r\n    \r\n    onTransformLabel = (x) => {\r\n        this.setState({\r\n            x: !x\r\n        })\r\n    };\r\n\r\n    addingClass = (e) => {\r\n        const {target} = e;\r\n        if (target && target.classList.contains('post-item')) {\r\n            target.classList.add('editing');\r\n        } \r\n    }\r\n\r\n    removingClass = (e) => {\r\n        const target = document.querySelectorAll('.post-item');\r\n        target.forEach(item => {\r\n            if (e.keyCode === 13) {\r\n                item.classList.remove('editing');\r\n            }\r\n        })     \r\n    }\r\n\r\n    onLabelChange = (e) => {\r\n        this.setState({\r\n            newLabel: e.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        const {onDeleteItem, onCompleted} = this.props;\r\n        const {x, newLabel} = this.state;\r\n        const checkedLabel = x === true ? 'checked-label' : '';\r\n\r\n        return (\r\n            <li \r\n                className=\"post-item list-group-item \"\r\n                onDoubleClick={this.addingClass}>\r\n                <input \r\n                    id=\"check\"\r\n                    type=\"checkbox\" \r\n                    className=\"radio\"\r\n                    onChange={() => this.onTransformLabel(x)}\r\n                    onClick={onCompleted}\r\n                    checked={x}/>\r\n                <label htmlFor=\"check\"></label>\r\n                <div className=\"styled-div\">\r\n                    <span className={checkedLabel}>{newLabel}</span>\r\n                    <i \r\n                        className=\"fa fa-times\" \r\n                        aria-hidden=\"true\" \r\n                        onClick={onDeleteItem}></i>\r\n                </div>\r\n                <input \r\n                    className=\"edit\"\r\n                    type=\"text\" \r\n                    value={newLabel}\r\n                    onChange={this.onLabelChange}\r\n                    onKeyDown={this.removingClass}\r\n                    />\r\n            </li>\r\n        )   \r\n    }\r\n};\r\n\r\n","import PostListFilter from './post-list-filter';\r\nexport default PostListFilter;","import React, {Component} from 'react';\r\nimport './post-list-filter.css';\r\n\r\nexport default class PostListFilter extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.buttons = [\r\n            {name: 'all', label: 'All'},\r\n            {name: 'completed', label: 'Completed'}\r\n        ]\r\n    }\r\n\r\n    render() {\r\n        const {number, filterSelect, filter} = this.props;\r\n        const buttons = this.buttons.map(({name, label}) => {\r\n            const active = filter === name;\r\n            const clas = active ? 'btn-active' : '';\r\n            return (\r\n                <button key={name}\r\n                        className={\"btn-filter mr-right \" + clas}\r\n                        type=\"button\"\r\n                        onClick={ () => filterSelect(name)}>\r\n                            {label}\r\n                        </button>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"post-filter-item\">\r\n                <div className=\"mt-two-px\">\r\n                    <span>{number}</span> item left\r\n                </div>\r\n                <div> \r\n                    {buttons}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n","import PostList from './post-list';\r\nexport default PostList;","import React from 'react';\r\nimport PostListItem from '../post-list-item/post-list-item';\r\nimport PostListFilter from '../post-list-filter';\r\nimport './post-list.css';\r\n\r\nconst PostList = ({posts, onDeleteItem, number, filter, filterSelect, onCompleted}) => {\r\n\r\n    const elements = posts.map((item) => {\r\n        const {id, ...itemProps} = item;\r\n\r\n        return (\r\n            <div key={id}>\r\n                <PostListItem \r\n                    {...itemProps}\r\n                    onDeleteItem={ () => onDeleteItem(id)}                    onCompleted={ () => onCompleted(id)}/>\r\n            </div>\r\n                \r\n        )\r\n    });\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {elements}\r\n            <PostListFilter \r\n                number={number}\r\n                filter={filter}\r\n                filterSelect={filterSelect}/>\r\n        </ul>\r\n    )\r\n};\r\n\r\nexport default PostList;\r\n\r\n\r\n","import App from './app';\r\nexport default App;","import React from 'react';\r\nimport PostAddForm from '../post-add-form';\r\nimport PostList from '../post-list';\r\nimport nextId from \"react-id-generator\";\r\n\r\nimport './app.css';\r\nimport { Component } from 'react';\r\n\r\nexport default class App extends Component{\r\n\r\n    state = {\r\n        data: [],\r\n        filter: 'all'\r\n    }\r\n\r\n\r\n    onAddItem = (body) => {\r\n        const newItem = {\r\n            label: body,\r\n            active: true,\r\n            completed: false,\r\n            id: nextId()\r\n        }\r\n\r\n        this.setState(({data}) => {\r\n            const newArr = [...data, newItem];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteItem = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n            const newArr = [...before, ...after];\r\n\r\n            return {\r\n                data: newArr\r\n            }\r\n        })\r\n    }   \r\n\r\n    filterSelect = (filter) => {\r\n        this.setState({filter});\r\n    }\r\n\r\n    filterPost = (items, filter) => {\r\n        if (filter === 'active') {\r\n            return items.filter(item => item.active);\r\n        } else if (filter === 'completed'){\r\n            return items.filter(item => item.completed);\r\n        } else {\r\n            return items; \r\n        }\r\n    }\r\n\r\n    onCompleted = (id) => {\r\n        this.setState(({data}) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = {...old, completed: !old.completed};\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    render () {\r\n        const {data, filter} = this.state;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(data, filter);\r\n\r\n        return (\r\n            <div className=\"app\">\r\n                <PostAddForm onAdd={this.onAddItem}/>\r\n                <PostList \r\n                    posts={visiblePosts} \r\n                    onDeleteItem={this.onDeleteItem}\r\n                    number={allPosts}\r\n                    filter={filter}\r\n                    filterSelect={this.filterSelect}\r\n                    onCompleted={this.onCompleted}/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}